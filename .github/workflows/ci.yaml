name: CI - Build & Push Docker Image

on:
  push:
    branches:
      - main

jobs:
  build-and-push:
    runs-on: ubuntu-latest 

    env:
      ECR_REGISTRY: 132866222051.dkr.ecr.us-east-1.amazonaws.com
      ECR_REPOSITORY: strapi/strapi

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Login to Amazon ECR
        run: |
          aws ecr get-login-password --region us-east-1 | docker login --username AWS --password-stdin $ECR_REGISTRY

      - name: Delete old Docker images from ECR
        run: |
          echo "Deleting old images from ECR repository $ECR_REPOSITORY"
          IMAGE_IDS=$(aws ecr list-images --repository-name $ECR_REPOSITORY --query 'imageIds[*]' --output json)
          if [ "$IMAGE_IDS" != "[]" ]; then
            aws ecr batch-delete-image --repository-name $ECR_REPOSITORY --image-ids "$IMAGE_IDS"
          else
            echo "No images to delete"
          fi

      - name: Build Docker image
        run: |
          IMAGE_TAG=${GITHUB_SHA::8}
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG ./rakesh-strapi-project
          echo "IMAGE_TAG=$IMAGE_TAG" >> $GITHUB_ENV

      - name: Push Docker image to ECR
        run: |
          docker tag $ECR_REPOSITORY:$IMAGE_TAG $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG

      - name: Output image tag
        run: echo "docker-image-tag=$IMAGE_TAG" >> $GITHUB_OUTPUT
